// machine_bag.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô

// –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM
const TELEGRAM_CONFIG = {
    botToken: '7969220641:AAGCTj-G2kGav5g4QqR2yx2fV6KUpSByKWQ',
    chatId: '2038132122' // –ó–ê–ú–ï–ù–ò–¢–¨ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Chat ID
};

console.log('=== –ó–ê–ü–£–°–ö –ö–û–†–ó–ò–ù–´ ===');

// –ü—Ä–æ–≤–µ—Ä–∏–º –í–°–ï –¥–∞–Ω–Ω—ã–µ –≤ localStorage
console.log('–í–°–ï –¥–∞–Ω–Ω—ã–µ –≤ localStorage:');
for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    const value = localStorage.getItem(key);
    console.log(`${key}:`, value);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
function getCurrentUser() {
    const user = JSON.parse(localStorage.getItem('currentUser')) || null;
    console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    return user;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å —É—á–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getCart() {
    const user = getCurrentUser();
    let cart;
    
    if (user) {
        cart = JSON.parse(localStorage.getItem(`cart_${user.id}`)) || [];
        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', cart);
    } else {
        cart = JSON.parse(localStorage.getItem('cart_guest')) || [];
        console.log('–ì–æ—Å—Ç–µ–≤–∞—è –∫–æ—Ä–∑–∏–Ω–∞:', cart);
    }
    
    return cart;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å —É—á–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveCart(cart) {
    const user = getCurrentUser();
    if (user) {
        localStorage.setItem(`cart_${user.id}`, JSON.stringify(cart));
    } else {
        localStorage.setItem('cart_guest', JSON.stringify(cart));
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCounter() {
    const cart = getCart();
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    const cartCounter = document.getElementById('cart-count');
    if (cartCounter) {
        cartCounter.textContent = totalItems;
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
function renderCart() {
    const cartItems = document.getElementById('cart-items');
    const cartTotal = document.getElementById('cart-total');
    const clearCartBtn = document.getElementById('clear-cart');
    const cart = getCart();
    
    console.log('–ö–æ—Ä–∑–∏–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', cart);
    
    if (cart.length === 0) {
        cartItems.innerHTML = '<p class="empty-cart">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
        cartTotal.textContent = '';
        if (clearCartBtn) clearCartBtn.style.display = 'none';
        return;
    }
    
    if (clearCartBtn) clearCartBtn.style.display = 'block';
    
    let total = 0;
    cartItems.innerHTML = '';
    
    cart.forEach((item, index) => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        
        const itemEl = document.createElement('div');
        itemEl.className = 'cart-item';
        itemEl.innerHTML = `
            <div class="cart-item-info">
                <h3>${item.name}</h3>
                <p>${item.price} ‚ÇΩ √ó ${item.quantity}</p>
                ${item.size ? `<p>–†–∞–∑–º–µ—Ä: ${item.size}</p>` : ''}
                <button class="remove-item" onclick="removeFromCart(${index})">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            </div>
            <div class="cart-item-total">${itemTotal} ‚ÇΩ</div>
        `;
        cartItems.appendChild(itemEl);
    });
    
    cartTotal.textContent = `–ò—Ç–æ–≥–æ: ${total} ‚ÇΩ`;
    cartTotal.innerHTML += `<div class="delivery-note">*–î–æ—Å—Ç–∞–≤–∫–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ</div>`;
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(index) {
    let cart = getCart();
    
    if (confirm(`–£–¥–∞–ª–∏—Ç—å "${cart[index].name}" –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?`)) {
        cart.splice(index, 1);
        saveCart(cart);
        renderCart();
        updateCartCounter();
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
function clearCart() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?')) {
        saveCart([]); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É
        renderCart();
        updateCartCounter();
        alert('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞!');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
function updateAuthUI() {
    const user = getCurrentUser();
    const authSection = document.getElementById('auth-section');
    
    if (authSection) {
        if (user) {
            authSection.innerHTML = `
                <div class="user-info">
                    <span>üë§ ${user.username}</span>
                    <button onclick="logout()" class="logout-btn">–í—ã–π—Ç–∏</button>
                </div>
            `;
        } else {
            authSection.innerHTML = `
                <button onclick="showAuthModal()" class="auth-btn">–í–æ–π—Ç–∏</button>
            `;
        }
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    localStorage.removeItem('currentUser');
    updateAuthUI();
    updateCartCounter();
    renderCart(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function showAuthModal() {
    const modal = document.createElement('div');
    modal.className = 'auth-modal';
    modal.innerHTML = `
        <div class="auth-modal-content">
            <h3>–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</h3>
            <p>–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏</p>
            
            <div class="auth-options">
                <div class="auth-option" onclick="quickLogin('user123')">
                    <div class="auth-icon">üë§</div>
                    <div class="auth-text">
                        <strong>–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥</strong>
                        <span>–õ–æ–≥–∏–Ω: user123</span>
                    </div>
                </div>
                
                <div class="auth-option" onclick="quickLogin('fashion_lover')">
                    <div class="auth-icon">üõçÔ∏è</div>
                    <div class="auth-text">
                        <strong>–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥</strong>
                        <span>–õ–æ–≥–∏–Ω: fashion_lover</span>
                    </div>
                </div>
                
                <div class="auth-option" onclick="showCustomAuth()">
                    <div class="auth-icon">üîê</div>
                    <div class="auth-text">
                        <strong>–°–≤–æ–π –ª–æ–≥–∏–Ω</strong>
                        <span>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç</span>
                    </div>
                </div>
            </div>
            
            <button onclick="closeAuthModal()" class="close-auth-btn">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥
function quickLogin(username) {
    const user = {
        id: generateUserId(),
        username: username,
        loginTime: new Date().toISOString()
    };
    
    // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∫–æ—Ä–∑–∏–Ω—É –≥–æ—Å—Ç—è –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const guestCart = JSON.parse(localStorage.getItem('cart_guest')) || [];
    
    localStorage.setItem('currentUser', JSON.stringify(user));
    
    if (guestCart.length > 0) {
        saveCart(guestCart);
        localStorage.removeItem('cart_guest');
        setTimeout(() => {
            alert('–ö–æ—Ä–∑–∏–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞! –¢–æ–≤–∞—Ä–æ–≤: ' + guestCart.length);
        }, 100);
    }
    
    updateAuthUI();
    closeAuthModal();
    updateCartCounter();
    renderCart(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
function showCustomAuth() {
    const username = prompt('–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω:');
    if (username && username.length >= 3) {
        quickLogin(username);
    } else {
        alert('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function generateUserId() {
    return 'user_' + Math.random().toString(36).substr(2, 9);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeAuthModal() {
    const modal = document.querySelector('.auth-modal');
    if (modal) {
        modal.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram
async function sendOrderToTelegram(orderData) {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ Telegram...');
    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:', orderData);
    
    let message = `üõí *–ù–û–í–´–ô –ó–ê–ö–ê–ó* üõí\n\n`;
    message += `üìÖ *–î–∞—Ç–∞:* ${new Date().toLocaleString('ru-RU')}\n`;
    message += `üìû *–ö–æ–Ω—Ç–∞–∫—Ç:* ${orderData.contact}\n\n`;
    
    message += `*–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n`;
    orderData.items.forEach((item, index) => {
        message += `${index + 1}. ${item.name}\n`;
        message += `   –†–∞–∑–º–µ—Ä: ${item.size || 'M'}\n`;
        message += `   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${item.quantity} —à—Ç.\n`;
        message += `   –¶–µ–Ω–∞: ${item.price} ‚ÇΩ √ó ${item.quantity} = ${item.price * item.quantity} ‚ÇΩ\n\n`;
    });
    
    message += `üí∞ *–ò—Ç–æ–≥–æ:* ${orderData.total} ‚ÇΩ\n`;
    message += `üöö *–î–æ—Å—Ç–∞–≤–∫–∞:* —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n\n`;
    message += `‚è∞ *–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞:* ${new Date().toLocaleTimeString('ru-RU')}`;

    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram:', message);

    try {
        const TELEGRAM_URL = `https://api.telegram.org/bot${TELEGRAM_CONFIG.botToken}/sendMessage`;
        console.log('URL –∑–∞–ø—Ä–æ—Å–∞:', TELEGRAM_URL);
        
        const response = await fetch(TELEGRAM_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CONFIG.chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        });
        
        const result = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram:', result);
        
        if (result.ok) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            return true;
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ Telegram:', result.description);
            
            // –ü–æ–∫–∞–∂–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (result.description.includes('chat not found')) {
                alert('‚ùå –û—à–∏–±–∫–∞: Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.');
            } else if (result.description.includes('Not Found')) {
                alert('‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.');
            } else {
                alert(`‚ùå –û—à–∏–±–∫–∞ Telegram: ${result.description}`);
            }
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
        return false;
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm(contact) {
    if (!contact.trim()) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return false;
    }
    
    if (contact.trim().length < 3) {
        alert('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ');
        return false;
    }
    
    return true;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã...');
    renderCart();
    updateCartCounter();
    updateAuthUI();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏
    const clearCartBtn = document.getElementById('clear-cart');
    if (clearCartBtn) {
        clearCartBtn.addEventListener('click', clearCart);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
    const checkoutForm = document.getElementById('checkout-form');
    if (checkoutForm) {
        checkoutForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const cart = getCart();
            const contact = document.getElementById('contact').value.trim();
            const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (!validateForm(contact)) return;
            
            if (cart.length === 0) {
                alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.');
                return;
            }
            
            const orderData = {
                items: cart,
                total: total,
                contact: contact,
                timestamp: new Date().toISOString()
            };
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.textContent;
            submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
            submitBtn.disabled = true;
            
            try {
                const success = await sendOrderToTelegram(orderData);
                
                if (success) {
                    alert('‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ Telegram –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.');
                    saveCart([]); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
                    window.location.href = 'osnova.html';
                } else {
                    alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram.');
                }
            } catch (error) {
                alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é.');
            } finally {
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            }
        });
    }
});